{"version":3,"file":"fl-interactive-form-es3.js","sources":["/src/js-es3/polyfills.js","/src/js-es3/utils.js","/src/js-es3/input-types/options-input.js","/src/js-es3/input-types/text-input.js","/src/js-es3/input-types/date-input.js","/src/js-es3/input-creator.js","/src/js-es3/form-creator.js","/src/js-es3/main.js"],"sourcesContent":["if (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    };\n}\n","export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nexport function clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function fakeEvent(answers) {\n  return {\n    detail: {\n      answers: answers\n    }\n  };\n}\n\nexport function applyDataMask(field, fieldMask) {\n  var mask = fieldMask.split('');\n\n  // For now, this just strips everything that's not a number\n  function stripMask(maskedData) {\n    function isDigit(char) {\n      return /\\d/.test(char);\n    }\n    return maskedData.split('').filter(isDigit);\n  }\n\n  // Replace `_` characters with characters from `data`\n  function applyMask(data) {\n    return mask.map(function (char) {\n      if (char !== ' ') return char;\n      if (data.length == 0) return char;\n      return data.shift();\n    }).join('')\n  }\n\n  function reapplyMask(data) {\n    return applyMask(stripMask(data));\n  }\n\n  function changed() {\n    var oldStart = field.selectionStart;\n    var oldEnd = field.selectionEnd;\n\n    field.value = reapplyMask(field.value);\n\n    field.selectionStart = oldStart;\n    field.selectionEnd = oldEnd;\n  }\n\n  field.addEventListener('click', changed)\n  field.addEventListener('keyup', changed)\n}\n\n// createErrorMessage: String -> HTML\nexport function createErrorMessage(message) {\n  const err = document.createElement('div');\n  err.className = 'fl-if_Error fl-if_Error--speechBubble';\n  err.innerHTML = message;\n  return err;\n}\n\nexport function removeErrorMessage(field) {\n  const errorMessages = Array.from(field.querySelectorAll('.fl-if_Error'));\n  errorMessages.forEach(er => er.remove());\n}\n\nexport function trimSpaces(str) {\n  return str.replace(/\\s+/g, ' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n","// ---- RADIO AND CHECKBOX INPUT\nimport { trimSpaces, createErrorMessage, removeErrorMessage } from '../utils';\n\n\nfunction validateDropdown(field, required) {\n  const container = field.parentElement;\n  removeErrorMessage(container);\n  if (required && !trimSpaces(field.value)) {\n    container.appendChild(createErrorMessage('Please choose an option'));\n    return false;\n  }\n  return true;\n}\n\nfunction validateOptions(container, required) {\n  removeErrorMessage(container);\n\n  const oneChecked = Array.from(container.querySelectorAll('input'))\n    .map(r => r.checked)\n    .reduce((out, checked) => out || checked, false);\n\n  if (required && !oneChecked) {\n    container.appendChild(createErrorMessage('Please choose an option'));\n    return false;\n  }\n  return true;\n}\n\nexport function createOptionsInput(config) {\n  const wrapper = document.createElement('div');\n\n  wrapper.className = 'fl-if_OptionsInput';\n\n  const options = [];\n  const optionType = config.type === 'RadioButtons' ? 'radio' : 'checkbox';\n  const optionName = config.title.replace(/\\s'\"/gi, '');\n  for (let i = 0; i < config.options.length; i++) {\n    const optionID = Date.now() + Math.random();\n    const optionWrapper = document.createElement('div');\n    optionWrapper.className = 'fl-if_OptionsInput-optionWrapper';\n\n    const optionEl = document.createElement('input');\n    optionEl.id = optionID;\n    optionEl.type = optionType;\n    optionEl.setAttribute('value', config.options[i].value || config.options[i].caption);\n    optionEl.setAttribute('name', optionName);\n    optionWrapper.appendChild(optionEl);\n\n    const label = document.createElement('label');\n    label.setAttribute('for', optionID);\n    label.className = `${wrapper.className}-option`;\n    label.className += config.type === 'RadioButtons'\n      ? ' fl-if_OptionsInput-radio'\n      : ' fl-if_OptionsInput-checkbox';\n    optionWrapper.appendChild(label);\n\n    const optionLegend = document.createTextNode(config.options[i].caption);\n    label.appendChild(optionLegend);\n\n    wrapper.appendChild(optionWrapper);\n    options.push(optionEl);\n  }\n\n  wrapper.getValue = function getValue() {\n    const value = [];\n    for (let j = 0; j < options.length; j++) {\n      if (options[j].checked) {\n        value.push(config.options[j]);\n      }\n    }\n\n    return value;\n  };\n\n  wrapper.validate = () => validateOptions(wrapper, config.required);\n\n  return wrapper;\n}\n\n// ---- DROPDOWN INPUT\n\nexport function createDropdownInput(config) {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'fl-if_Dropdown fl-if_OptionsInput';\n\n  const select = document.createElement('select');\n  select.className = 'fl-if_Dropdown-option';\n  select.setAttribute('name', config.title);\n  if (config.required) {\n    select.setAttribute('required', true);\n  }\n  wrapper.appendChild(select);\n\n  let optionEl;\n\n  // default placeholder\n  optionEl = document.createElement('option');\n  optionEl.innerHTML = 'Please select an option';\n  optionEl.setAttribute('selected', true);\n  optionEl.setAttribute('disabled', true);\n  select.appendChild(optionEl);\n\n  const disabledIndexes = config.disabledIndexes || [];\n  for (let optionIndex = 0; optionIndex < config.options.length; optionIndex++) {\n    optionEl = document.createElement('option');\n\n    const optionValue = config.options[optionIndex].value || config.options[optionIndex].caption;\n    optionEl.setAttribute('value', optionValue);\n    optionEl.innerHTML = config.options[optionIndex].caption;\n\n    for (let j = 0; j < disabledIndexes.length; j++) {\n      if (optionIndex === config.disabledIndexes[j]) {\n        optionEl.setAttribute('disabled', true);\n      }\n    }\n\n    select.appendChild(optionEl);\n  }\n\n  wrapper.getValue = function getValue() {\n    return select.value;\n  };\n\n  wrapper.validate = () => validateDropdown(select, config.required);\n\n  select.addEventListener('blur', wrapper.validate);\n\n  return wrapper;\n}\n\nexport function createCountryDropdownInput(config) {\n  config.options = [\n    { value: 1, caption: 'AFGHANISTAN' },\n    { value: 2, caption: 'ALBANIA' },\n    { value: 3, caption: 'ALGERIA' },\n    { value: 4, caption: 'AMERICAN SAMOA' },\n    { value: 5, caption: 'ANDORRA' },\n    { value: 6, caption: 'ANGOLA' },\n    { value: 7, caption: 'ANGUILLA' },\n    { value: 8, caption: 'ANTARCTICA' },\n    { value: 9, caption: 'ANTIGUA AND BARBUDA' },\n    { value: 10, caption: 'ARGENTINA' },\n    { value: 11, caption: 'ARMENIA' },\n    { value: 12, caption: 'ARUBA' },\n    { value: 13, caption: 'AUSTRALIA' },\n    { value: 14, caption: 'AUSTRIA' },\n    { value: 15, caption: 'AZERBAIJAN' },\n    { value: 16, caption: 'BAHAMAS' },\n    { value: 17, caption: 'BAHRAIN' },\n    { value: 18, caption: 'BANGLADESH' },\n    { value: 19, caption: 'BARBADOS' },\n    { value: 20, caption: 'BELARUS' },\n    { value: 21, caption: 'BELGIUM' },\n    { value: 22, caption: 'BELIZE' },\n    { value: 23, caption: 'BENIN' },\n    { value: 24, caption: 'BERMUDA' },\n    { value: 25, caption: 'BHUTAN' },\n    { value: 26, caption: 'BOLIVIA' },\n    { value: 27, caption: 'BOSNIA AND HERZEGOWINA' },\n    { value: 28, caption: 'BOTSWANA' },\n    { value: 29, caption: 'BOUVET ISLAND' },\n    { value: 30, caption: 'BRAZIL' },\n    { value: 31, caption: 'BRITISH INDIAN OCEAN TERRITORY' },\n    { value: 32, caption: 'BRUNEI DARUSSALAM' },\n    { value: 33, caption: 'BULGARIA' },\n    { value: 34, caption: 'BURKINA FASO' },\n    { value: 35, caption: 'BURUNDI' },\n    { value: 36, caption: 'CAMBODIA' },\n    { value: 37, caption: 'CAMEROON' },\n    { value: 38, caption: 'CANADA' },\n    { value: 39, caption: 'CAPE VERDE' },\n    { value: 40, caption: 'CAYMAN ISLANDS' },\n    { value: 41, caption: 'CENTRAL AFRICAN REPUBLIC' },\n    { value: 42, caption: 'CHAD' },\n    { value: 43, caption: 'CHILE' },\n    { value: 44, caption: 'CHINA' },\n    { value: 45, caption: 'CHRISTMAS ISLAND' },\n    { value: 46, caption: 'COCOS (KEELING) ISLANDS' },\n    { value: 47, caption: 'COLOMBIA' },\n    { value: 48, caption: 'COMOROS' },\n    { value: 49, caption: 'CONGO' },\n    { value: 50, caption: 'CONGO, THE DRC' },\n    { value: 51, caption: 'COOK ISLANDS' },\n    { value: 52, caption: 'COSTA RICA' },\n    { value: 53, caption: 'COTE D\\'IVOIRE' },\n    { value: 54, caption: 'CROATIA (local{ value: nam, caption: \\'Hrvatska)' },\n    { value: 55, caption: 'CUBA' },\n    { value: 56, caption: 'CYPRUS' },\n    { value: 57, caption: 'CZECH REPUBLIC' },\n    { value: 58, caption: 'DENMARK' },\n    { value: 59, caption: 'DJIBOUTI' },\n    { value: 60, caption: 'DOMINICA' },\n    { value: 61, caption: 'DOMINICAN REPUBLIC' },\n    { value: 62, caption: 'EAST TIMOR' },\n    { value: 63, caption: 'ECUADOR' },\n    { value: 64, caption: 'EGYPT' },\n    { value: 65, caption: 'EL SALVADOR' },\n    { value: 242, caption: 'ENGLAND' },\n    { value: 66, caption: 'EQUATORIAL GUINEA' },\n    { value: 67, caption: 'ERITREA' },\n    { value: 68, caption: 'ESTONIA' },\n    { value: 69, caption: 'ETHIOPIA' },\n    { value: 70, caption: 'FALKLAND ISLANDS (MALVINAS)' },\n    { value: 71, caption: 'FAROE ISLANDS' },\n    { value: 72, caption: 'FIJI' },\n    { value: 73, caption: 'FINLAND' },\n    { value: 74, caption: 'FRANCE' },\n    { value: 75, caption: 'FRANCE, METROPOLITAN' },\n    { value: 76, caption: 'FRENCH GUIANA' },\n    { value: 77, caption: 'FRENCH POLYNESIA' },\n    { value: 78, caption: 'FRENCH SOUTHERN TERRITORIES' },\n    { value: 79, caption: 'GABON' },\n    { value: 246, caption: 'GALAPAGOS' },\n    { value: 80, caption: 'GAMBIA' },\n    { value: 81, caption: 'GEORGIA' },\n    { value: 82, caption: 'GERMANY' },\n    { value: 83, caption: 'GHANA' },\n    { value: 84, caption: 'GIBRALTAR' },\n    { value: 85, caption: 'GREECE' },\n    { value: 86, caption: 'GREENLAND' },\n    { value: 87, caption: 'GRENADA' },\n    { value: 88, caption: 'GUADELOUPE' },\n    { value: 89, caption: 'GUAM' },\n    { value: 90, caption: 'GUATEMALA' },\n    { value: 91, caption: 'GUINEA' },\n    { value: 92, caption: 'GUINEA-BISSAU' },\n    { value: 93, caption: 'GUYANA' },\n    { value: 94, caption: 'HAITI' },\n    { value: 245, caption: 'HAWAII' },\n    { value: 95, caption: 'HEARD AND MC DONALD ISLANDS' },\n    { value: 96, caption: 'HOLY SEE (VATICAN CITY STATE)' },\n    { value: 97, caption: 'HONDURAS' },\n    { value: 98, caption: 'HONG KONG' },\n    { value: 99, caption: 'HUNGARY' },\n    { value: 100, caption: 'ICELAND' },\n    { value: 101, caption: 'INDIA' },\n    { value: 102, caption: 'INDONESIA' },\n    { value: 103, caption: 'IRAN (ISLAMIC REPUBLIC OF)' },\n    { value: 104, caption: 'IRAQ' },\n    { value: 105, caption: 'IRELAND' },\n    { value: 106, caption: 'ISRAEL' },\n    { value: 107, caption: 'ITALY' },\n    { value: 108, caption: 'JAMAICA' },\n    { value: 109, caption: 'JAPAN' },\n    { value: 110, caption: 'JORDAN' },\n    { value: 111, caption: 'KAZAKHSTAN' },\n    { value: 112, caption: 'KENYA' },\n    { value: 113, caption: 'KIRIBATI' },\n    { value: 114, caption: 'KOREA, D.P.R.O.' },\n    { value: 115, caption: 'KOREA, REPUBLIC OF' },\n    { value: 116, caption: 'KUWAIT' },\n    { value: 117, caption: 'KYRGYZSTAN' },\n    { value: 118, caption: 'LAOS' },\n    { value: 119, caption: 'LATVIA' },\n    { value: 120, caption: 'LEBANON' },\n    { value: 121, caption: 'LESOTHO' },\n    { value: 122, caption: 'LIBERIA' },\n    { value: 123, caption: 'LIBYAN ARAB JAMAHIRIYA' },\n    { value: 124, caption: 'LIECHTENSTEIN' },\n    { value: 125, caption: 'LITHUANIA' },\n    { value: 126, caption: 'LUXEMBOURG' },\n    { value: 127, caption: 'MACAU' },\n    { value: 128, caption: 'MACEDONIA' },\n    { value: 129, caption: 'MADAGASCAR' },\n    { value: 130, caption: 'MALAWI' },\n    { value: 131, caption: 'MALAYSIA' },\n    { value: 132, caption: 'MALDIVES' },\n    { value: 133, caption: 'MALI' },\n    { value: 134, caption: 'MALTA' },\n    { value: 135, caption: 'MARSHALL ISLANDS' },\n    { value: 136, caption: 'MARTINIQUE' },\n    { value: 137, caption: 'MAURITANIA' },\n    { value: 138, caption: 'MAURITIUS' },\n    { value: 139, caption: 'MAYOTTE' },\n    { value: 140, caption: 'MEXICO' },\n    { value: 141, caption: 'MICRONESIA, FEDERATED STATES OF' },\n    { value: 142, caption: 'MOLDOVA, REPUBLIC OF' },\n    { value: 143, caption: 'MONACO' },\n    { value: 144, caption: 'MONGOLIA' },\n    { value: 145, caption: 'MONTENEGRO' },\n    { value: 146, caption: 'MONTSERRAT' },\n    { value: 147, caption: 'MOROCCO' },\n    { value: 148, caption: 'MOZAMBIQUE' },\n    { value: 244, caption: 'MULTI COUNTRY' },\n    { value: 149, caption: 'MYANMAR (Burma)' },\n    { value: 150, caption: 'NAMIBIA' },\n    { value: 151, caption: 'NAURU' },\n    { value: 152, caption: 'NEPAL' },\n    { value: 153, caption: 'NETHERLANDS' },\n    { value: 154, caption: 'NETHERLANDS ANTILLES' },\n    { value: 155, caption: 'NEW CALEDONIA' },\n    { value: 156, caption: 'NEW ZEALAND' },\n    { value: 157, caption: 'NICARAGUA' },\n    { value: 158, caption: 'NIGER' },\n    { value: 159, caption: 'NIGERIA' },\n    { value: 160, caption: 'NIUE' },\n    { value: 161, caption: 'NORFOLK ISLAND' },\n    { value: 162, caption: 'NORTHERN MARIANA ISLANDS' },\n    { value: 163, caption: 'NORWAY' },\n    { value: 164, caption: 'OMAN' },\n    { value: 165, caption: 'PAKISTAN' },\n    { value: 166, caption: 'PALAU' },\n    { value: 167, caption: 'PANAMA' },\n    { value: 168, caption: 'PAPUA NEW GUINEA' },\n    { value: 169, caption: 'PARAGUAY' },\n    { value: 170, caption: 'PERU' },\n    { value: 171, caption: 'PHILIPPINES' },\n    { value: 172, caption: 'PITCAIRN' },\n    { value: 173, caption: 'POLAND' },\n    { value: 174, caption: 'PORTUGAL' },\n    { value: 175, caption: 'PUERTO RICO' },\n    { value: 176, caption: 'QATAR' },\n    { value: 177, caption: 'REUNION' },\n    { value: 178, caption: 'ROMANIA' },\n    { value: 179, caption: 'RUSSIAN FEDERATION' },\n    { value: 180, caption: 'RWANDA' },\n    { value: 181, caption: 'SAINT KITTS AND NEVIS' },\n    { value: 182, caption: 'SAINT LUCIA' },\n    { value: 183, caption: 'SAINT VINCENT AND THE GRENADINES' },\n    { value: 184, caption: 'SAMOA' },\n    { value: 185, caption: 'SAN MARINO' },\n    { value: 186, caption: 'SAO TOME AND PRINCIPE' },\n    { value: 187, caption: 'SAUDI ARABIA' },\n    { value: 243, caption: 'SCOTLAND' },\n    { value: 188, caption: 'SENEGAL' },\n    { value: 189, caption: 'SERBIA' },\n    { value: 190, caption: 'SEYCHELLES' },\n    { value: 191, caption: 'SIERRA LEONE' },\n    { value: 192, caption: 'SINGAPORE' },\n    { value: 193, caption: 'SLOVAKIA (Slovak Republic)' },\n    { value: 194, caption: 'SLOVENIA' },\n    { value: 195, caption: 'SOLOMON ISLANDS' },\n    { value: 196, caption: 'SOMALIA' },\n    { value: 197, caption: 'SOUTH AFRICA' },\n    { value: 198, caption: 'SOUTH GEORGIA AND SOUTH S.S.' },\n    { value: 199, caption: 'SOUTH SUDAN' },\n    { value: 200, caption: 'SPAIN' },\n    { value: 201, caption: 'SRI LANKA' },\n    { value: 202, caption: 'ST. HELENA' },\n    { value: 203, caption: 'ST. PIERRE AND MIQUELON' },\n    { value: 204, caption: 'SUDAN' },\n    { value: 205, caption: 'SURINAME' },\n    { value: 206, caption: 'SVALBARD AND JAN MAYEN ISLANDS' },\n    { value: 207, caption: 'SWAZILAND' },\n    { value: 208, caption: 'SWEDEN' },\n    { value: 209, caption: 'SWITZERLAND' },\n    { value: 210, caption: 'SYRIAN ARAB REPUBLIC' },\n    { value: 211, caption: 'TAIWAN, PROVINCE OF CHINA' },\n    { value: 212, caption: 'TAJIKISTAN' },\n    { value: 213, caption: 'TANZANIA, UNITED REPUBLIC OF' },\n    { value: 214, caption: 'THAILAND' },\n    { value: 215, caption: 'TOGO' },\n    { value: 216, caption: 'TOKELAU' },\n    { value: 217, caption: 'TONGA' },\n    { value: 218, caption: 'TRINIDAD AND TOBAGO' },\n    { value: 219, caption: 'TUNISIA' },\n    { value: 220, caption: 'TURKEY' },\n    { value: 221, caption: 'TURKMENISTAN' },\n    { value: 222, caption: 'TURKS AND CAICOS ISLANDS' },\n    { value: 223, caption: 'TUVALU' },\n    { value: 224, caption: 'U.S. MINOR ISLANDS' },\n    { value: 225, caption: 'UGANDA' },\n    { value: 226, caption: 'UKRAINE' },\n    { value: 227, caption: 'UNITED ARAB EMIRATES' },\n    { value: 228, caption: 'UNITED KINGDOM' },\n    { value: 229, caption: 'UNITED STATES' },\n    { value: 230, caption: 'URUGUAY' },\n    { value: 231, caption: 'UZBEKISTAN' },\n    { value: 232, caption: 'VANUATU' },\n    { value: 233, caption: 'VENEZUELA' },\n    { value: 234, caption: 'VIETNAM' },\n    { value: 235, caption: 'VIRGIN ISLANDS (BRITISH)' },\n    { value: 236, caption: 'VIRGIN ISLANDS (U.S.)' },\n    { value: 237, caption: 'WALLIS AND FUTUNA ISLANDS' },\n    { value: 238, caption: 'WESTERN SAHARA' },\n    { value: 239, caption: 'YEMEN' },\n    { value: 240, caption: 'ZAMBIA' },\n    { value: 241, caption: 'ZIMBABWE' },\n  ];\n  return createDropdownInput(config);\n}\n","import { trimSpaces, createErrorMessage, removeErrorMessage } from '../utils';\n\nconst textInputTypes = {\n  TextArea: {\n    type: 'text',\n    regex: /\\w{2,}/,\n    error: 'This field must be filled',\n  },\n  TextBox: {\n    type: 'text',\n    regex: /\\w{2,}/,\n    error: 'This field must be filled',\n  },\n  EmailBox: {\n    type: 'email',\n    // Simple and quite broad for basic validation.\n    regex: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n    error: 'Please insert a valid email address',\n  },\n  NumberBox: {\n    type: 'number',\n    regex: /^[0-9]+$/,\n    error: 'Please insert a valid number',\n  },\n  TelephoneBox: {\n    type: 'tel',\n    // matches (+23) 2343 - 2342\n    regex: /^[\\+0-9\\-\\(\\)\\s]{6,}$/,\n    error: 'Please insert a valid telephone number',\n  },\n};\n\n// Returns true if valid and false if not.\n// HTML -> Boolean\nfunction validate(field, required, type) {\n  // Remove errors\n  removeErrorMessage(field.parentElement);\n  const regex = textInputTypes[type].regex;\n  const content = trimSpaces(field.value);\n\n  if (!required || !regex || regex.test(content)) {\n    return true;\n  }\n  field.parentElement.appendChild(createErrorMessage(textInputTypes[type].error));\n  return false;\n}\n\n\nexport default function createTextInput(config) {\n  const tagName = config.type === 'TextArea' ? 'textarea' : 'input';\n  const el = document.createElement(tagName);\n  el.className = tagName === 'textarea'\n    ? 'fl-if_TextInput-input fl-if_TextAreaInput-input'\n    : 'fl-if_TextInput-input';\n  el.setAttribute('name', config.title);\n  el.setAttribute('type', textInputTypes[config.type].type);\n  el.placeholder = config.placeholder;\n  if (config.required) {\n    el.setAttribute('required', true);\n  }\n\n  el.getValue = function getValue() {\n    return el.value;\n  };\n\n  el.validate = () => validate(el, config.required, config.type);\n\n  el.addEventListener('blur', el.validate);\n\n  return el;\n}\n","import { applyDataMask, trimSpaces, createErrorMessage, removeErrorMessage } from '../utils';\n\nfunction validate(field, required) {\n  const dateNumbers = trimSpaces(field.value).match(/[0-9]/g) || [];\n  const container = field.parentElement;\n  removeErrorMessage(container);\n\n  if (required && dateNumbers.length !== 8) {\n    createErrorMessage(container);\n    return false;\n  }\n  return true;\n}\n\n\nexport default function createDateInput(config) { // eslint-disable-line no-unused-vars\n  const dateField = document.createElement('input');\n  dateField.setAttribute('type', 'text');\n  dateField.className = 'fl-if_TextInput-input';\n  dateField.value = 'DD/MM/YYYY';\n  if (config.required) {\n    dateField.setAttribute('required', true);\n  }\n  applyDataMask(dateField, '  /  /    ');\n\n  dateField.getValue = function () { return dateField.value; };\n\n  dateField.validate = () => validate(dateField, config.required);\n\n  return dateField;\n}\n","import { createOptionsInput, createDropdownInput, createCountryDropdownInput } from './input-types/options-input';\nimport createTextInput from './input-types/text-input';\nimport createDateInput from './input-types/date-input';\n\n// ================= FIELD FACTORY ===================//\n//\n//  Implements the `getValue` method to return the input value\n//\n\nconst inputCreators = {\n  EmailBox: createTextInput,\n  NumberBox: createTextInput,\n  TelephoneBox: createTextInput,\n  TextBox: createTextInput,\n  TextArea: createTextInput,\n  Checkboxes: createOptionsInput,\n  Dropdown: createDropdownInput,\n  CountryDropdown: createCountryDropdownInput,\n  RadioButtons: createOptionsInput,\n  DateField: createDateInput,\n};\n\n/**\n * @method formField\n * @param  {Object} config Question configuration object\n * @return {HTMLElement}\n */\nexport default function formField(config) {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'fl-if_FormField fl-if_FormField--active';\n\n  const legend = document.createElement('p');\n  legend.className = 'fl-if_FormField-legend';\n  legend.innerHTML = config.title;\n\n  const elementType = inputCreators[config.type] || inputCreators[config.primitiveType];\n  const inputEl = elementType(config);\n\n  wrapper.appendChild(legend);\n  wrapper.appendChild(inputEl);\n  wrapper.getValue = inputEl.getValue;\n  wrapper.validate = inputEl.validate;\n  return wrapper;\n}\n","import formField from './input-creator';\nimport { fakeEvent, clone, createErrorMessage, removeErrorMessage } from './utils';\n\n// =============== FORM STRUCTURE ===================//\n\nexport default function es3Form(config) {\n  const form = document.createElement('form');\n  form.className = 'fl-if_FormUI fl-if_FormUI-es3';\n\n  const questions = [];\n  let questionEl;\n  for (let i = 0; i < config.length; i++) {\n    questionEl = formField(config[i]);\n    questions.push(questionEl);\n    form.appendChild(questionEl);\n  }\n\n  const submitBtnContainer = document.createElement('div');\n  submitBtnContainer.className = 'fl-if_FormField fl-if_FormField--active';\n\n  const submitBtn = document.createElement('button');\n  submitBtn.setAttribute('type', 'submit');\n  submitBtn.innerHTML = 'Submit';\n  submitBtn.className = 'fl-if_NavigationBar-button';\n  submitBtnContainer.appendChild(submitBtn);\n  form.appendChild(submitBtnContainer);\n\n  const formWrapper = document.createElement('div');\n  formWrapper.className = 'fl-if';\n  formWrapper.appendChild(form);\n\n  const listeners = [];\n  formWrapper.addEventListener = function customAddEventListener(event, callback) {\n    if (event === 'submit') {\n      listeners.push(callback);\n    } else {\n      return form.addEventListener(event, callback);\n    }\n    return null;\n  };\n\n  formWrapper.triggerSubmit = function triggerSubmit(formData) {\n    const evt = fakeEvent(formData);\n    for (let j = 0; j < listeners.length; j++) {\n      listeners[j](evt);\n    }\n  };\n\n  form.addEventListener('submit', function submitBtnClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    removeErrorMessage(submitBtnContainer);\n    const notValidatedFields = questions\n      .map(field => {\n        if (field.validate) {\n          return field.validate();\n        }\n        return true;\n      })\n      .filter(v => !v);\n\n    if (notValidatedFields.length > 0) {\n      submitBtnContainer.appendChild(\n        createErrorMessage(`${notValidatedFields.length} fields need to be completed.`)\n      );\n      return false;\n    }\n\n    const formData = config.map((field, index) =>\n      Object.assign({}, field, { answer: questions[index].getValue() })\n    );\n\n    formWrapper.triggerSubmit(formData);\n\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  });\n\n  return formWrapper;\n}\n","import './polyfills';\nimport es3Form from './form-creator';\nimport { assert } from './utils';\n\n// =============== GLOBAL OBJECT ===================//\n\n// START HERE\nconst flInteractiveForm = {\n  create: function create(config) {\n    assert(config && config.length !== undefined,\n      'The first argument must be a configuration array');\n\n    const form = es3Form(config);\n    return form;\n  },\n};\n\nexport default flInteractiveForm;\n"],"names":["Element","prototype","remove","parentNode","removeChild","assert","condition","message","Error","fakeEvent","answers","applyDataMask","field","fieldMask","mask","split","stripMask","maskedData","isDigit","char","test","filter","applyMask","data","map","length","shift","join","reapplyMask","changed","oldStart","selectionStart","oldEnd","selectionEnd","value","addEventListener","createErrorMessage","err","document","createElement","className","innerHTML","removeErrorMessage","errorMessages","Array","from","querySelectorAll","forEach","er","trimSpaces","str","replace","validateDropdown","required","container","parentElement","appendChild","validateOptions","oneChecked","r","checked","reduce","out","createOptionsInput","config","wrapper","options","optionType","type","optionName","title","i","optionID","Date","now","Math","random","optionWrapper","optionEl","id","setAttribute","caption","label","optionLegend","createTextNode","push","getValue","j","validate","createDropdownInput","select","disabledIndexes","optionIndex","optionValue","createCountryDropdownInput","textInputTypes","regex","content","error","createTextInput","tagName","el","placeholder","dateNumbers","match","createDateInput","dateField","inputCreators","formField","legend","elementType","primitiveType","inputEl","es3Form","form","questions","questionEl","submitBtnContainer","submitBtn","formWrapper","listeners","customAddEventListener","event","callback","triggerSubmit","formData","evt","submitBtnClick","e","preventDefault","stopPropagation","notValidatedFields","v","index","Object","assign","answer","flInteractiveForm","create","undefined"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvcG9seWZpbGxzLmpzIiwiL2hvbWUvbWFyY2Vsby9Qcm9ncmFtcy9Gb3VyTGFicy9Db21wb25lbnRzL2ZsLWludGVyYWN0aXZlLWZvcm0vc3JjL2pzLWVzMy91dGlscy5qcyIsIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvaW5wdXQtdHlwZXMvb3B0aW9ucy1pbnB1dC5qcyIsIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvaW5wdXQtdHlwZXMvdGV4dC1pbnB1dC5qcyIsIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvaW5wdXQtdHlwZXMvZGF0ZS1pbnB1dC5qcyIsIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvaW5wdXQtY3JlYXRvci5qcyIsIi9ob21lL21hcmNlbG8vUHJvZ3JhbXMvRm91ckxhYnMvQ29tcG9uZW50cy9mbC1pbnRlcmFjdGl2ZS1mb3JtL3NyYy9qcy1lczMvZm9ybS1jcmVhdG9yLmpzIiwiL2hvbWUvbWFyY2Vsby9Qcm9ncmFtcy9Gb3VyTGFicy9Db21wb25lbnRzL2ZsLWludGVyYWN0aXZlLWZvcm0vc3JjL2pzLWVzMy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImlmICghKCdyZW1vdmUnIGluIEVsZW1lbnQucHJvdG90eXBlKSkge1xuICAgIEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsb25lKG9iaikge1xuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZha2VFdmVudChhbnN3ZXJzKSB7XG4gIHJldHVybiB7XG4gICAgZGV0YWlsOiB7XG4gICAgICBhbnN3ZXJzOiBhbnN3ZXJzXG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlEYXRhTWFzayhmaWVsZCwgZmllbGRNYXNrKSB7XG4gIHZhciBtYXNrID0gZmllbGRNYXNrLnNwbGl0KCcnKTtcblxuICAvLyBGb3Igbm93LCB0aGlzIGp1c3Qgc3RyaXBzIGV2ZXJ5dGhpbmcgdGhhdCdzIG5vdCBhIG51bWJlclxuICBmdW5jdGlvbiBzdHJpcE1hc2sobWFza2VkRGF0YSkge1xuICAgIGZ1bmN0aW9uIGlzRGlnaXQoY2hhcikge1xuICAgICAgcmV0dXJuIC9cXGQvLnRlc3QoY2hhcik7XG4gICAgfVxuICAgIHJldHVybiBtYXNrZWREYXRhLnNwbGl0KCcnKS5maWx0ZXIoaXNEaWdpdCk7XG4gIH1cblxuICAvLyBSZXBsYWNlIGBfYCBjaGFyYWN0ZXJzIHdpdGggY2hhcmFjdGVycyBmcm9tIGBkYXRhYFxuICBmdW5jdGlvbiBhcHBseU1hc2soZGF0YSkge1xuICAgIHJldHVybiBtYXNrLm1hcChmdW5jdGlvbiAoY2hhcikge1xuICAgICAgaWYgKGNoYXIgIT09ICcgJykgcmV0dXJuIGNoYXI7XG4gICAgICBpZiAoZGF0YS5sZW5ndGggPT0gMCkgcmV0dXJuIGNoYXI7XG4gICAgICByZXR1cm4gZGF0YS5zaGlmdCgpO1xuICAgIH0pLmpvaW4oJycpXG4gIH1cblxuICBmdW5jdGlvbiByZWFwcGx5TWFzayhkYXRhKSB7XG4gICAgcmV0dXJuIGFwcGx5TWFzayhzdHJpcE1hc2soZGF0YSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hhbmdlZCgpIHtcbiAgICB2YXIgb2xkU3RhcnQgPSBmaWVsZC5zZWxlY3Rpb25TdGFydDtcbiAgICB2YXIgb2xkRW5kID0gZmllbGQuc2VsZWN0aW9uRW5kO1xuXG4gICAgZmllbGQudmFsdWUgPSByZWFwcGx5TWFzayhmaWVsZC52YWx1ZSk7XG5cbiAgICBmaWVsZC5zZWxlY3Rpb25TdGFydCA9IG9sZFN0YXJ0O1xuICAgIGZpZWxkLnNlbGVjdGlvbkVuZCA9IG9sZEVuZDtcbiAgfVxuXG4gIGZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2hhbmdlZClcbiAgZmllbGQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBjaGFuZ2VkKVxufVxuXG4vLyBjcmVhdGVFcnJvck1lc3NhZ2U6IFN0cmluZyAtPiBIVE1MXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXJyb3JNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgY29uc3QgZXJyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVyci5jbGFzc05hbWUgPSAnZmwtaWZfRXJyb3IgZmwtaWZfRXJyb3ItLXNwZWVjaEJ1YmJsZSc7XG4gIGVyci5pbm5lckhUTUwgPSBtZXNzYWdlO1xuICByZXR1cm4gZXJyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlRXJyb3JNZXNzYWdlKGZpZWxkKSB7XG4gIGNvbnN0IGVycm9yTWVzc2FnZXMgPSBBcnJheS5mcm9tKGZpZWxkLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mbC1pZl9FcnJvcicpKTtcbiAgZXJyb3JNZXNzYWdlcy5mb3JFYWNoKGVyID0+IGVyLnJlbW92ZSgpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyaW1TcGFjZXMoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxzKy9nLCAnICcpLnJlcGxhY2UoL15cXHMrLywgJycpLnJlcGxhY2UoL1xccyskLywgJycpO1xufVxuIiwiLy8gLS0tLSBSQURJTyBBTkQgQ0hFQ0tCT1ggSU5QVVRcbmltcG9ydCB7IHRyaW1TcGFjZXMsIGNyZWF0ZUVycm9yTWVzc2FnZSwgcmVtb3ZlRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlRHJvcGRvd24oZmllbGQsIHJlcXVpcmVkKSB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGZpZWxkLnBhcmVudEVsZW1lbnQ7XG4gIHJlbW92ZUVycm9yTWVzc2FnZShjb250YWluZXIpO1xuICBpZiAocmVxdWlyZWQgJiYgIXRyaW1TcGFjZXMoZmllbGQudmFsdWUpKSB7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUVycm9yTWVzc2FnZSgnUGxlYXNlIGNob29zZSBhbiBvcHRpb24nKSk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZU9wdGlvbnMoY29udGFpbmVyLCByZXF1aXJlZCkge1xuICByZW1vdmVFcnJvck1lc3NhZ2UoY29udGFpbmVyKTtcblxuICBjb25zdCBvbmVDaGVja2VkID0gQXJyYXkuZnJvbShjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKSlcbiAgICAubWFwKHIgPT4gci5jaGVja2VkKVxuICAgIC5yZWR1Y2UoKG91dCwgY2hlY2tlZCkgPT4gb3V0IHx8IGNoZWNrZWQsIGZhbHNlKTtcblxuICBpZiAocmVxdWlyZWQgJiYgIW9uZUNoZWNrZWQpIHtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRXJyb3JNZXNzYWdlKCdQbGVhc2UgY2hvb3NlIGFuIG9wdGlvbicpKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVPcHRpb25zSW5wdXQoY29uZmlnKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICB3cmFwcGVyLmNsYXNzTmFtZSA9ICdmbC1pZl9PcHRpb25zSW5wdXQnO1xuXG4gIGNvbnN0IG9wdGlvbnMgPSBbXTtcbiAgY29uc3Qgb3B0aW9uVHlwZSA9IGNvbmZpZy50eXBlID09PSAnUmFkaW9CdXR0b25zJyA/ICdyYWRpbycgOiAnY2hlY2tib3gnO1xuICBjb25zdCBvcHRpb25OYW1lID0gY29uZmlnLnRpdGxlLnJlcGxhY2UoL1xccydcIi9naSwgJycpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbmZpZy5vcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgb3B0aW9uSUQgPSBEYXRlLm5vdygpICsgTWF0aC5yYW5kb20oKTtcbiAgICBjb25zdCBvcHRpb25XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgb3B0aW9uV3JhcHBlci5jbGFzc05hbWUgPSAnZmwtaWZfT3B0aW9uc0lucHV0LW9wdGlvbldyYXBwZXInO1xuXG4gICAgY29uc3Qgb3B0aW9uRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIG9wdGlvbkVsLmlkID0gb3B0aW9uSUQ7XG4gICAgb3B0aW9uRWwudHlwZSA9IG9wdGlvblR5cGU7XG4gICAgb3B0aW9uRWwuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGNvbmZpZy5vcHRpb25zW2ldLnZhbHVlIHx8IGNvbmZpZy5vcHRpb25zW2ldLmNhcHRpb24pO1xuICAgIG9wdGlvbkVsLnNldEF0dHJpYnV0ZSgnbmFtZScsIG9wdGlvbk5hbWUpO1xuICAgIG9wdGlvbldyYXBwZXIuYXBwZW5kQ2hpbGQob3B0aW9uRWwpO1xuXG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgb3B0aW9uSUQpO1xuICAgIGxhYmVsLmNsYXNzTmFtZSA9IGAke3dyYXBwZXIuY2xhc3NOYW1lfS1vcHRpb25gO1xuICAgIGxhYmVsLmNsYXNzTmFtZSArPSBjb25maWcudHlwZSA9PT0gJ1JhZGlvQnV0dG9ucydcbiAgICAgID8gJyBmbC1pZl9PcHRpb25zSW5wdXQtcmFkaW8nXG4gICAgICA6ICcgZmwtaWZfT3B0aW9uc0lucHV0LWNoZWNrYm94JztcbiAgICBvcHRpb25XcmFwcGVyLmFwcGVuZENoaWxkKGxhYmVsKTtcblxuICAgIGNvbnN0IG9wdGlvbkxlZ2VuZCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNvbmZpZy5vcHRpb25zW2ldLmNhcHRpb24pO1xuICAgIGxhYmVsLmFwcGVuZENoaWxkKG9wdGlvbkxlZ2VuZCk7XG5cbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG9wdGlvbldyYXBwZXIpO1xuICAgIG9wdGlvbnMucHVzaChvcHRpb25FbCk7XG4gIH1cblxuICB3cmFwcGVyLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgY29uc3QgdmFsdWUgPSBbXTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IG9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGlmIChvcHRpb25zW2pdLmNoZWNrZWQpIHtcbiAgICAgICAgdmFsdWUucHVzaChjb25maWcub3B0aW9uc1tqXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xuXG4gIHdyYXBwZXIudmFsaWRhdGUgPSAoKSA9PiB2YWxpZGF0ZU9wdGlvbnMod3JhcHBlciwgY29uZmlnLnJlcXVpcmVkKTtcblxuICByZXR1cm4gd3JhcHBlcjtcbn1cblxuLy8gLS0tLSBEUk9QRE9XTiBJTlBVVFxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRHJvcGRvd25JbnB1dChjb25maWcpIHtcbiAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwcGVyLmNsYXNzTmFtZSA9ICdmbC1pZl9Ecm9wZG93biBmbC1pZl9PcHRpb25zSW5wdXQnO1xuXG4gIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICBzZWxlY3QuY2xhc3NOYW1lID0gJ2ZsLWlmX0Ryb3Bkb3duLW9wdGlvbic7XG4gIHNlbGVjdC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBjb25maWcudGl0bGUpO1xuICBpZiAoY29uZmlnLnJlcXVpcmVkKSB7XG4gICAgc2VsZWN0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCB0cnVlKTtcbiAgfVxuICB3cmFwcGVyLmFwcGVuZENoaWxkKHNlbGVjdCk7XG5cbiAgbGV0IG9wdGlvbkVsO1xuXG4gIC8vIGRlZmF1bHQgcGxhY2Vob2xkZXJcbiAgb3B0aW9uRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgb3B0aW9uRWwuaW5uZXJIVE1MID0gJ1BsZWFzZSBzZWxlY3QgYW4gb3B0aW9uJztcbiAgb3B0aW9uRWwuc2V0QXR0cmlidXRlKCdzZWxlY3RlZCcsIHRydWUpO1xuICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gIHNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb25FbCk7XG5cbiAgY29uc3QgZGlzYWJsZWRJbmRleGVzID0gY29uZmlnLmRpc2FibGVkSW5kZXhlcyB8fCBbXTtcbiAgZm9yIChsZXQgb3B0aW9uSW5kZXggPSAwOyBvcHRpb25JbmRleCA8IGNvbmZpZy5vcHRpb25zLmxlbmd0aDsgb3B0aW9uSW5kZXgrKykge1xuICAgIG9wdGlvbkVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG5cbiAgICBjb25zdCBvcHRpb25WYWx1ZSA9IGNvbmZpZy5vcHRpb25zW29wdGlvbkluZGV4XS52YWx1ZSB8fCBjb25maWcub3B0aW9uc1tvcHRpb25JbmRleF0uY2FwdGlvbjtcbiAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgb3B0aW9uVmFsdWUpO1xuICAgIG9wdGlvbkVsLmlubmVySFRNTCA9IGNvbmZpZy5vcHRpb25zW29wdGlvbkluZGV4XS5jYXB0aW9uO1xuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBkaXNhYmxlZEluZGV4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGlmIChvcHRpb25JbmRleCA9PT0gY29uZmlnLmRpc2FibGVkSW5kZXhlc1tqXSkge1xuICAgICAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbkVsKTtcbiAgfVxuXG4gIHdyYXBwZXIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gc2VsZWN0LnZhbHVlO1xuICB9O1xuXG4gIHdyYXBwZXIudmFsaWRhdGUgPSAoKSA9PiB2YWxpZGF0ZURyb3Bkb3duKHNlbGVjdCwgY29uZmlnLnJlcXVpcmVkKTtcblxuICBzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIHdyYXBwZXIudmFsaWRhdGUpO1xuXG4gIHJldHVybiB3cmFwcGVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ291bnRyeURyb3Bkb3duSW5wdXQoY29uZmlnKSB7XG4gIGNvbmZpZy5vcHRpb25zID0gW1xuICAgIHsgdmFsdWU6IDEsIGNhcHRpb246ICdBRkdIQU5JU1RBTicgfSxcbiAgICB7IHZhbHVlOiAyLCBjYXB0aW9uOiAnQUxCQU5JQScgfSxcbiAgICB7IHZhbHVlOiAzLCBjYXB0aW9uOiAnQUxHRVJJQScgfSxcbiAgICB7IHZhbHVlOiA0LCBjYXB0aW9uOiAnQU1FUklDQU4gU0FNT0EnIH0sXG4gICAgeyB2YWx1ZTogNSwgY2FwdGlvbjogJ0FORE9SUkEnIH0sXG4gICAgeyB2YWx1ZTogNiwgY2FwdGlvbjogJ0FOR09MQScgfSxcbiAgICB7IHZhbHVlOiA3LCBjYXB0aW9uOiAnQU5HVUlMTEEnIH0sXG4gICAgeyB2YWx1ZTogOCwgY2FwdGlvbjogJ0FOVEFSQ1RJQ0EnIH0sXG4gICAgeyB2YWx1ZTogOSwgY2FwdGlvbjogJ0FOVElHVUEgQU5EIEJBUkJVREEnIH0sXG4gICAgeyB2YWx1ZTogMTAsIGNhcHRpb246ICdBUkdFTlRJTkEnIH0sXG4gICAgeyB2YWx1ZTogMTEsIGNhcHRpb246ICdBUk1FTklBJyB9LFxuICAgIHsgdmFsdWU6IDEyLCBjYXB0aW9uOiAnQVJVQkEnIH0sXG4gICAgeyB2YWx1ZTogMTMsIGNhcHRpb246ICdBVVNUUkFMSUEnIH0sXG4gICAgeyB2YWx1ZTogMTQsIGNhcHRpb246ICdBVVNUUklBJyB9LFxuICAgIHsgdmFsdWU6IDE1LCBjYXB0aW9uOiAnQVpFUkJBSUpBTicgfSxcbiAgICB7IHZhbHVlOiAxNiwgY2FwdGlvbjogJ0JBSEFNQVMnIH0sXG4gICAgeyB2YWx1ZTogMTcsIGNhcHRpb246ICdCQUhSQUlOJyB9LFxuICAgIHsgdmFsdWU6IDE4LCBjYXB0aW9uOiAnQkFOR0xBREVTSCcgfSxcbiAgICB7IHZhbHVlOiAxOSwgY2FwdGlvbjogJ0JBUkJBRE9TJyB9LFxuICAgIHsgdmFsdWU6IDIwLCBjYXB0aW9uOiAnQkVMQVJVUycgfSxcbiAgICB7IHZhbHVlOiAyMSwgY2FwdGlvbjogJ0JFTEdJVU0nIH0sXG4gICAgeyB2YWx1ZTogMjIsIGNhcHRpb246ICdCRUxJWkUnIH0sXG4gICAgeyB2YWx1ZTogMjMsIGNhcHRpb246ICdCRU5JTicgfSxcbiAgICB7IHZhbHVlOiAyNCwgY2FwdGlvbjogJ0JFUk1VREEnIH0sXG4gICAgeyB2YWx1ZTogMjUsIGNhcHRpb246ICdCSFVUQU4nIH0sXG4gICAgeyB2YWx1ZTogMjYsIGNhcHRpb246ICdCT0xJVklBJyB9LFxuICAgIHsgdmFsdWU6IDI3LCBjYXB0aW9uOiAnQk9TTklBIEFORCBIRVJaRUdPV0lOQScgfSxcbiAgICB7IHZhbHVlOiAyOCwgY2FwdGlvbjogJ0JPVFNXQU5BJyB9LFxuICAgIHsgdmFsdWU6IDI5LCBjYXB0aW9uOiAnQk9VVkVUIElTTEFORCcgfSxcbiAgICB7IHZhbHVlOiAzMCwgY2FwdGlvbjogJ0JSQVpJTCcgfSxcbiAgICB7IHZhbHVlOiAzMSwgY2FwdGlvbjogJ0JSSVRJU0ggSU5ESUFOIE9DRUFOIFRFUlJJVE9SWScgfSxcbiAgICB7IHZhbHVlOiAzMiwgY2FwdGlvbjogJ0JSVU5FSSBEQVJVU1NBTEFNJyB9LFxuICAgIHsgdmFsdWU6IDMzLCBjYXB0aW9uOiAnQlVMR0FSSUEnIH0sXG4gICAgeyB2YWx1ZTogMzQsIGNhcHRpb246ICdCVVJLSU5BIEZBU08nIH0sXG4gICAgeyB2YWx1ZTogMzUsIGNhcHRpb246ICdCVVJVTkRJJyB9LFxuICAgIHsgdmFsdWU6IDM2LCBjYXB0aW9uOiAnQ0FNQk9ESUEnIH0sXG4gICAgeyB2YWx1ZTogMzcsIGNhcHRpb246ICdDQU1FUk9PTicgfSxcbiAgICB7IHZhbHVlOiAzOCwgY2FwdGlvbjogJ0NBTkFEQScgfSxcbiAgICB7IHZhbHVlOiAzOSwgY2FwdGlvbjogJ0NBUEUgVkVSREUnIH0sXG4gICAgeyB2YWx1ZTogNDAsIGNhcHRpb246ICdDQVlNQU4gSVNMQU5EUycgfSxcbiAgICB7IHZhbHVlOiA0MSwgY2FwdGlvbjogJ0NFTlRSQUwgQUZSSUNBTiBSRVBVQkxJQycgfSxcbiAgICB7IHZhbHVlOiA0MiwgY2FwdGlvbjogJ0NIQUQnIH0sXG4gICAgeyB2YWx1ZTogNDMsIGNhcHRpb246ICdDSElMRScgfSxcbiAgICB7IHZhbHVlOiA0NCwgY2FwdGlvbjogJ0NISU5BJyB9LFxuICAgIHsgdmFsdWU6IDQ1LCBjYXB0aW9uOiAnQ0hSSVNUTUFTIElTTEFORCcgfSxcbiAgICB7IHZhbHVlOiA0NiwgY2FwdGlvbjogJ0NPQ09TIChLRUVMSU5HKSBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDQ3LCBjYXB0aW9uOiAnQ09MT01CSUEnIH0sXG4gICAgeyB2YWx1ZTogNDgsIGNhcHRpb246ICdDT01PUk9TJyB9LFxuICAgIHsgdmFsdWU6IDQ5LCBjYXB0aW9uOiAnQ09OR08nIH0sXG4gICAgeyB2YWx1ZTogNTAsIGNhcHRpb246ICdDT05HTywgVEhFIERSQycgfSxcbiAgICB7IHZhbHVlOiA1MSwgY2FwdGlvbjogJ0NPT0sgSVNMQU5EUycgfSxcbiAgICB7IHZhbHVlOiA1MiwgY2FwdGlvbjogJ0NPU1RBIFJJQ0EnIH0sXG4gICAgeyB2YWx1ZTogNTMsIGNhcHRpb246ICdDT1RFIERcXCdJVk9JUkUnIH0sXG4gICAgeyB2YWx1ZTogNTQsIGNhcHRpb246ICdDUk9BVElBIChsb2NhbHsgdmFsdWU6IG5hbSwgY2FwdGlvbjogXFwnSHJ2YXRza2EpJyB9LFxuICAgIHsgdmFsdWU6IDU1LCBjYXB0aW9uOiAnQ1VCQScgfSxcbiAgICB7IHZhbHVlOiA1NiwgY2FwdGlvbjogJ0NZUFJVUycgfSxcbiAgICB7IHZhbHVlOiA1NywgY2FwdGlvbjogJ0NaRUNIIFJFUFVCTElDJyB9LFxuICAgIHsgdmFsdWU6IDU4LCBjYXB0aW9uOiAnREVOTUFSSycgfSxcbiAgICB7IHZhbHVlOiA1OSwgY2FwdGlvbjogJ0RKSUJPVVRJJyB9LFxuICAgIHsgdmFsdWU6IDYwLCBjYXB0aW9uOiAnRE9NSU5JQ0EnIH0sXG4gICAgeyB2YWx1ZTogNjEsIGNhcHRpb246ICdET01JTklDQU4gUkVQVUJMSUMnIH0sXG4gICAgeyB2YWx1ZTogNjIsIGNhcHRpb246ICdFQVNUIFRJTU9SJyB9LFxuICAgIHsgdmFsdWU6IDYzLCBjYXB0aW9uOiAnRUNVQURPUicgfSxcbiAgICB7IHZhbHVlOiA2NCwgY2FwdGlvbjogJ0VHWVBUJyB9LFxuICAgIHsgdmFsdWU6IDY1LCBjYXB0aW9uOiAnRUwgU0FMVkFET1InIH0sXG4gICAgeyB2YWx1ZTogMjQyLCBjYXB0aW9uOiAnRU5HTEFORCcgfSxcbiAgICB7IHZhbHVlOiA2NiwgY2FwdGlvbjogJ0VRVUFUT1JJQUwgR1VJTkVBJyB9LFxuICAgIHsgdmFsdWU6IDY3LCBjYXB0aW9uOiAnRVJJVFJFQScgfSxcbiAgICB7IHZhbHVlOiA2OCwgY2FwdGlvbjogJ0VTVE9OSUEnIH0sXG4gICAgeyB2YWx1ZTogNjksIGNhcHRpb246ICdFVEhJT1BJQScgfSxcbiAgICB7IHZhbHVlOiA3MCwgY2FwdGlvbjogJ0ZBTEtMQU5EIElTTEFORFMgKE1BTFZJTkFTKScgfSxcbiAgICB7IHZhbHVlOiA3MSwgY2FwdGlvbjogJ0ZBUk9FIElTTEFORFMnIH0sXG4gICAgeyB2YWx1ZTogNzIsIGNhcHRpb246ICdGSUpJJyB9LFxuICAgIHsgdmFsdWU6IDczLCBjYXB0aW9uOiAnRklOTEFORCcgfSxcbiAgICB7IHZhbHVlOiA3NCwgY2FwdGlvbjogJ0ZSQU5DRScgfSxcbiAgICB7IHZhbHVlOiA3NSwgY2FwdGlvbjogJ0ZSQU5DRSwgTUVUUk9QT0xJVEFOJyB9LFxuICAgIHsgdmFsdWU6IDc2LCBjYXB0aW9uOiAnRlJFTkNIIEdVSUFOQScgfSxcbiAgICB7IHZhbHVlOiA3NywgY2FwdGlvbjogJ0ZSRU5DSCBQT0xZTkVTSUEnIH0sXG4gICAgeyB2YWx1ZTogNzgsIGNhcHRpb246ICdGUkVOQ0ggU09VVEhFUk4gVEVSUklUT1JJRVMnIH0sXG4gICAgeyB2YWx1ZTogNzksIGNhcHRpb246ICdHQUJPTicgfSxcbiAgICB7IHZhbHVlOiAyNDYsIGNhcHRpb246ICdHQUxBUEFHT1MnIH0sXG4gICAgeyB2YWx1ZTogODAsIGNhcHRpb246ICdHQU1CSUEnIH0sXG4gICAgeyB2YWx1ZTogODEsIGNhcHRpb246ICdHRU9SR0lBJyB9LFxuICAgIHsgdmFsdWU6IDgyLCBjYXB0aW9uOiAnR0VSTUFOWScgfSxcbiAgICB7IHZhbHVlOiA4MywgY2FwdGlvbjogJ0dIQU5BJyB9LFxuICAgIHsgdmFsdWU6IDg0LCBjYXB0aW9uOiAnR0lCUkFMVEFSJyB9LFxuICAgIHsgdmFsdWU6IDg1LCBjYXB0aW9uOiAnR1JFRUNFJyB9LFxuICAgIHsgdmFsdWU6IDg2LCBjYXB0aW9uOiAnR1JFRU5MQU5EJyB9LFxuICAgIHsgdmFsdWU6IDg3LCBjYXB0aW9uOiAnR1JFTkFEQScgfSxcbiAgICB7IHZhbHVlOiA4OCwgY2FwdGlvbjogJ0dVQURFTE9VUEUnIH0sXG4gICAgeyB2YWx1ZTogODksIGNhcHRpb246ICdHVUFNJyB9LFxuICAgIHsgdmFsdWU6IDkwLCBjYXB0aW9uOiAnR1VBVEVNQUxBJyB9LFxuICAgIHsgdmFsdWU6IDkxLCBjYXB0aW9uOiAnR1VJTkVBJyB9LFxuICAgIHsgdmFsdWU6IDkyLCBjYXB0aW9uOiAnR1VJTkVBLUJJU1NBVScgfSxcbiAgICB7IHZhbHVlOiA5MywgY2FwdGlvbjogJ0dVWUFOQScgfSxcbiAgICB7IHZhbHVlOiA5NCwgY2FwdGlvbjogJ0hBSVRJJyB9LFxuICAgIHsgdmFsdWU6IDI0NSwgY2FwdGlvbjogJ0hBV0FJSScgfSxcbiAgICB7IHZhbHVlOiA5NSwgY2FwdGlvbjogJ0hFQVJEIEFORCBNQyBET05BTEQgSVNMQU5EUycgfSxcbiAgICB7IHZhbHVlOiA5NiwgY2FwdGlvbjogJ0hPTFkgU0VFIChWQVRJQ0FOIENJVFkgU1RBVEUpJyB9LFxuICAgIHsgdmFsdWU6IDk3LCBjYXB0aW9uOiAnSE9ORFVSQVMnIH0sXG4gICAgeyB2YWx1ZTogOTgsIGNhcHRpb246ICdIT05HIEtPTkcnIH0sXG4gICAgeyB2YWx1ZTogOTksIGNhcHRpb246ICdIVU5HQVJZJyB9LFxuICAgIHsgdmFsdWU6IDEwMCwgY2FwdGlvbjogJ0lDRUxBTkQnIH0sXG4gICAgeyB2YWx1ZTogMTAxLCBjYXB0aW9uOiAnSU5ESUEnIH0sXG4gICAgeyB2YWx1ZTogMTAyLCBjYXB0aW9uOiAnSU5ET05FU0lBJyB9LFxuICAgIHsgdmFsdWU6IDEwMywgY2FwdGlvbjogJ0lSQU4gKElTTEFNSUMgUkVQVUJMSUMgT0YpJyB9LFxuICAgIHsgdmFsdWU6IDEwNCwgY2FwdGlvbjogJ0lSQVEnIH0sXG4gICAgeyB2YWx1ZTogMTA1LCBjYXB0aW9uOiAnSVJFTEFORCcgfSxcbiAgICB7IHZhbHVlOiAxMDYsIGNhcHRpb246ICdJU1JBRUwnIH0sXG4gICAgeyB2YWx1ZTogMTA3LCBjYXB0aW9uOiAnSVRBTFknIH0sXG4gICAgeyB2YWx1ZTogMTA4LCBjYXB0aW9uOiAnSkFNQUlDQScgfSxcbiAgICB7IHZhbHVlOiAxMDksIGNhcHRpb246ICdKQVBBTicgfSxcbiAgICB7IHZhbHVlOiAxMTAsIGNhcHRpb246ICdKT1JEQU4nIH0sXG4gICAgeyB2YWx1ZTogMTExLCBjYXB0aW9uOiAnS0FaQUtIU1RBTicgfSxcbiAgICB7IHZhbHVlOiAxMTIsIGNhcHRpb246ICdLRU5ZQScgfSxcbiAgICB7IHZhbHVlOiAxMTMsIGNhcHRpb246ICdLSVJJQkFUSScgfSxcbiAgICB7IHZhbHVlOiAxMTQsIGNhcHRpb246ICdLT1JFQSwgRC5QLlIuTy4nIH0sXG4gICAgeyB2YWx1ZTogMTE1LCBjYXB0aW9uOiAnS09SRUEsIFJFUFVCTElDIE9GJyB9LFxuICAgIHsgdmFsdWU6IDExNiwgY2FwdGlvbjogJ0tVV0FJVCcgfSxcbiAgICB7IHZhbHVlOiAxMTcsIGNhcHRpb246ICdLWVJHWVpTVEFOJyB9LFxuICAgIHsgdmFsdWU6IDExOCwgY2FwdGlvbjogJ0xBT1MnIH0sXG4gICAgeyB2YWx1ZTogMTE5LCBjYXB0aW9uOiAnTEFUVklBJyB9LFxuICAgIHsgdmFsdWU6IDEyMCwgY2FwdGlvbjogJ0xFQkFOT04nIH0sXG4gICAgeyB2YWx1ZTogMTIxLCBjYXB0aW9uOiAnTEVTT1RITycgfSxcbiAgICB7IHZhbHVlOiAxMjIsIGNhcHRpb246ICdMSUJFUklBJyB9LFxuICAgIHsgdmFsdWU6IDEyMywgY2FwdGlvbjogJ0xJQllBTiBBUkFCIEpBTUFISVJJWUEnIH0sXG4gICAgeyB2YWx1ZTogMTI0LCBjYXB0aW9uOiAnTElFQ0hURU5TVEVJTicgfSxcbiAgICB7IHZhbHVlOiAxMjUsIGNhcHRpb246ICdMSVRIVUFOSUEnIH0sXG4gICAgeyB2YWx1ZTogMTI2LCBjYXB0aW9uOiAnTFVYRU1CT1VSRycgfSxcbiAgICB7IHZhbHVlOiAxMjcsIGNhcHRpb246ICdNQUNBVScgfSxcbiAgICB7IHZhbHVlOiAxMjgsIGNhcHRpb246ICdNQUNFRE9OSUEnIH0sXG4gICAgeyB2YWx1ZTogMTI5LCBjYXB0aW9uOiAnTUFEQUdBU0NBUicgfSxcbiAgICB7IHZhbHVlOiAxMzAsIGNhcHRpb246ICdNQUxBV0knIH0sXG4gICAgeyB2YWx1ZTogMTMxLCBjYXB0aW9uOiAnTUFMQVlTSUEnIH0sXG4gICAgeyB2YWx1ZTogMTMyLCBjYXB0aW9uOiAnTUFMRElWRVMnIH0sXG4gICAgeyB2YWx1ZTogMTMzLCBjYXB0aW9uOiAnTUFMSScgfSxcbiAgICB7IHZhbHVlOiAxMzQsIGNhcHRpb246ICdNQUxUQScgfSxcbiAgICB7IHZhbHVlOiAxMzUsIGNhcHRpb246ICdNQVJTSEFMTCBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDEzNiwgY2FwdGlvbjogJ01BUlRJTklRVUUnIH0sXG4gICAgeyB2YWx1ZTogMTM3LCBjYXB0aW9uOiAnTUFVUklUQU5JQScgfSxcbiAgICB7IHZhbHVlOiAxMzgsIGNhcHRpb246ICdNQVVSSVRJVVMnIH0sXG4gICAgeyB2YWx1ZTogMTM5LCBjYXB0aW9uOiAnTUFZT1RURScgfSxcbiAgICB7IHZhbHVlOiAxNDAsIGNhcHRpb246ICdNRVhJQ08nIH0sXG4gICAgeyB2YWx1ZTogMTQxLCBjYXB0aW9uOiAnTUlDUk9ORVNJQSwgRkVERVJBVEVEIFNUQVRFUyBPRicgfSxcbiAgICB7IHZhbHVlOiAxNDIsIGNhcHRpb246ICdNT0xET1ZBLCBSRVBVQkxJQyBPRicgfSxcbiAgICB7IHZhbHVlOiAxNDMsIGNhcHRpb246ICdNT05BQ08nIH0sXG4gICAgeyB2YWx1ZTogMTQ0LCBjYXB0aW9uOiAnTU9OR09MSUEnIH0sXG4gICAgeyB2YWx1ZTogMTQ1LCBjYXB0aW9uOiAnTU9OVEVORUdSTycgfSxcbiAgICB7IHZhbHVlOiAxNDYsIGNhcHRpb246ICdNT05UU0VSUkFUJyB9LFxuICAgIHsgdmFsdWU6IDE0NywgY2FwdGlvbjogJ01PUk9DQ08nIH0sXG4gICAgeyB2YWx1ZTogMTQ4LCBjYXB0aW9uOiAnTU9aQU1CSVFVRScgfSxcbiAgICB7IHZhbHVlOiAyNDQsIGNhcHRpb246ICdNVUxUSSBDT1VOVFJZJyB9LFxuICAgIHsgdmFsdWU6IDE0OSwgY2FwdGlvbjogJ01ZQU5NQVIgKEJ1cm1hKScgfSxcbiAgICB7IHZhbHVlOiAxNTAsIGNhcHRpb246ICdOQU1JQklBJyB9LFxuICAgIHsgdmFsdWU6IDE1MSwgY2FwdGlvbjogJ05BVVJVJyB9LFxuICAgIHsgdmFsdWU6IDE1MiwgY2FwdGlvbjogJ05FUEFMJyB9LFxuICAgIHsgdmFsdWU6IDE1MywgY2FwdGlvbjogJ05FVEhFUkxBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDE1NCwgY2FwdGlvbjogJ05FVEhFUkxBTkRTIEFOVElMTEVTJyB9LFxuICAgIHsgdmFsdWU6IDE1NSwgY2FwdGlvbjogJ05FVyBDQUxFRE9OSUEnIH0sXG4gICAgeyB2YWx1ZTogMTU2LCBjYXB0aW9uOiAnTkVXIFpFQUxBTkQnIH0sXG4gICAgeyB2YWx1ZTogMTU3LCBjYXB0aW9uOiAnTklDQVJBR1VBJyB9LFxuICAgIHsgdmFsdWU6IDE1OCwgY2FwdGlvbjogJ05JR0VSJyB9LFxuICAgIHsgdmFsdWU6IDE1OSwgY2FwdGlvbjogJ05JR0VSSUEnIH0sXG4gICAgeyB2YWx1ZTogMTYwLCBjYXB0aW9uOiAnTklVRScgfSxcbiAgICB7IHZhbHVlOiAxNjEsIGNhcHRpb246ICdOT1JGT0xLIElTTEFORCcgfSxcbiAgICB7IHZhbHVlOiAxNjIsIGNhcHRpb246ICdOT1JUSEVSTiBNQVJJQU5BIElTTEFORFMnIH0sXG4gICAgeyB2YWx1ZTogMTYzLCBjYXB0aW9uOiAnTk9SV0FZJyB9LFxuICAgIHsgdmFsdWU6IDE2NCwgY2FwdGlvbjogJ09NQU4nIH0sXG4gICAgeyB2YWx1ZTogMTY1LCBjYXB0aW9uOiAnUEFLSVNUQU4nIH0sXG4gICAgeyB2YWx1ZTogMTY2LCBjYXB0aW9uOiAnUEFMQVUnIH0sXG4gICAgeyB2YWx1ZTogMTY3LCBjYXB0aW9uOiAnUEFOQU1BJyB9LFxuICAgIHsgdmFsdWU6IDE2OCwgY2FwdGlvbjogJ1BBUFVBIE5FVyBHVUlORUEnIH0sXG4gICAgeyB2YWx1ZTogMTY5LCBjYXB0aW9uOiAnUEFSQUdVQVknIH0sXG4gICAgeyB2YWx1ZTogMTcwLCBjYXB0aW9uOiAnUEVSVScgfSxcbiAgICB7IHZhbHVlOiAxNzEsIGNhcHRpb246ICdQSElMSVBQSU5FUycgfSxcbiAgICB7IHZhbHVlOiAxNzIsIGNhcHRpb246ICdQSVRDQUlSTicgfSxcbiAgICB7IHZhbHVlOiAxNzMsIGNhcHRpb246ICdQT0xBTkQnIH0sXG4gICAgeyB2YWx1ZTogMTc0LCBjYXB0aW9uOiAnUE9SVFVHQUwnIH0sXG4gICAgeyB2YWx1ZTogMTc1LCBjYXB0aW9uOiAnUFVFUlRPIFJJQ08nIH0sXG4gICAgeyB2YWx1ZTogMTc2LCBjYXB0aW9uOiAnUUFUQVInIH0sXG4gICAgeyB2YWx1ZTogMTc3LCBjYXB0aW9uOiAnUkVVTklPTicgfSxcbiAgICB7IHZhbHVlOiAxNzgsIGNhcHRpb246ICdST01BTklBJyB9LFxuICAgIHsgdmFsdWU6IDE3OSwgY2FwdGlvbjogJ1JVU1NJQU4gRkVERVJBVElPTicgfSxcbiAgICB7IHZhbHVlOiAxODAsIGNhcHRpb246ICdSV0FOREEnIH0sXG4gICAgeyB2YWx1ZTogMTgxLCBjYXB0aW9uOiAnU0FJTlQgS0lUVFMgQU5EIE5FVklTJyB9LFxuICAgIHsgdmFsdWU6IDE4MiwgY2FwdGlvbjogJ1NBSU5UIExVQ0lBJyB9LFxuICAgIHsgdmFsdWU6IDE4MywgY2FwdGlvbjogJ1NBSU5UIFZJTkNFTlQgQU5EIFRIRSBHUkVOQURJTkVTJyB9LFxuICAgIHsgdmFsdWU6IDE4NCwgY2FwdGlvbjogJ1NBTU9BJyB9LFxuICAgIHsgdmFsdWU6IDE4NSwgY2FwdGlvbjogJ1NBTiBNQVJJTk8nIH0sXG4gICAgeyB2YWx1ZTogMTg2LCBjYXB0aW9uOiAnU0FPIFRPTUUgQU5EIFBSSU5DSVBFJyB9LFxuICAgIHsgdmFsdWU6IDE4NywgY2FwdGlvbjogJ1NBVURJIEFSQUJJQScgfSxcbiAgICB7IHZhbHVlOiAyNDMsIGNhcHRpb246ICdTQ09UTEFORCcgfSxcbiAgICB7IHZhbHVlOiAxODgsIGNhcHRpb246ICdTRU5FR0FMJyB9LFxuICAgIHsgdmFsdWU6IDE4OSwgY2FwdGlvbjogJ1NFUkJJQScgfSxcbiAgICB7IHZhbHVlOiAxOTAsIGNhcHRpb246ICdTRVlDSEVMTEVTJyB9LFxuICAgIHsgdmFsdWU6IDE5MSwgY2FwdGlvbjogJ1NJRVJSQSBMRU9ORScgfSxcbiAgICB7IHZhbHVlOiAxOTIsIGNhcHRpb246ICdTSU5HQVBPUkUnIH0sXG4gICAgeyB2YWx1ZTogMTkzLCBjYXB0aW9uOiAnU0xPVkFLSUEgKFNsb3ZhayBSZXB1YmxpYyknIH0sXG4gICAgeyB2YWx1ZTogMTk0LCBjYXB0aW9uOiAnU0xPVkVOSUEnIH0sXG4gICAgeyB2YWx1ZTogMTk1LCBjYXB0aW9uOiAnU09MT01PTiBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDE5NiwgY2FwdGlvbjogJ1NPTUFMSUEnIH0sXG4gICAgeyB2YWx1ZTogMTk3LCBjYXB0aW9uOiAnU09VVEggQUZSSUNBJyB9LFxuICAgIHsgdmFsdWU6IDE5OCwgY2FwdGlvbjogJ1NPVVRIIEdFT1JHSUEgQU5EIFNPVVRIIFMuUy4nIH0sXG4gICAgeyB2YWx1ZTogMTk5LCBjYXB0aW9uOiAnU09VVEggU1VEQU4nIH0sXG4gICAgeyB2YWx1ZTogMjAwLCBjYXB0aW9uOiAnU1BBSU4nIH0sXG4gICAgeyB2YWx1ZTogMjAxLCBjYXB0aW9uOiAnU1JJIExBTktBJyB9LFxuICAgIHsgdmFsdWU6IDIwMiwgY2FwdGlvbjogJ1NULiBIRUxFTkEnIH0sXG4gICAgeyB2YWx1ZTogMjAzLCBjYXB0aW9uOiAnU1QuIFBJRVJSRSBBTkQgTUlRVUVMT04nIH0sXG4gICAgeyB2YWx1ZTogMjA0LCBjYXB0aW9uOiAnU1VEQU4nIH0sXG4gICAgeyB2YWx1ZTogMjA1LCBjYXB0aW9uOiAnU1VSSU5BTUUnIH0sXG4gICAgeyB2YWx1ZTogMjA2LCBjYXB0aW9uOiAnU1ZBTEJBUkQgQU5EIEpBTiBNQVlFTiBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDIwNywgY2FwdGlvbjogJ1NXQVpJTEFORCcgfSxcbiAgICB7IHZhbHVlOiAyMDgsIGNhcHRpb246ICdTV0VERU4nIH0sXG4gICAgeyB2YWx1ZTogMjA5LCBjYXB0aW9uOiAnU1dJVFpFUkxBTkQnIH0sXG4gICAgeyB2YWx1ZTogMjEwLCBjYXB0aW9uOiAnU1lSSUFOIEFSQUIgUkVQVUJMSUMnIH0sXG4gICAgeyB2YWx1ZTogMjExLCBjYXB0aW9uOiAnVEFJV0FOLCBQUk9WSU5DRSBPRiBDSElOQScgfSxcbiAgICB7IHZhbHVlOiAyMTIsIGNhcHRpb246ICdUQUpJS0lTVEFOJyB9LFxuICAgIHsgdmFsdWU6IDIxMywgY2FwdGlvbjogJ1RBTlpBTklBLCBVTklURUQgUkVQVUJMSUMgT0YnIH0sXG4gICAgeyB2YWx1ZTogMjE0LCBjYXB0aW9uOiAnVEhBSUxBTkQnIH0sXG4gICAgeyB2YWx1ZTogMjE1LCBjYXB0aW9uOiAnVE9HTycgfSxcbiAgICB7IHZhbHVlOiAyMTYsIGNhcHRpb246ICdUT0tFTEFVJyB9LFxuICAgIHsgdmFsdWU6IDIxNywgY2FwdGlvbjogJ1RPTkdBJyB9LFxuICAgIHsgdmFsdWU6IDIxOCwgY2FwdGlvbjogJ1RSSU5JREFEIEFORCBUT0JBR08nIH0sXG4gICAgeyB2YWx1ZTogMjE5LCBjYXB0aW9uOiAnVFVOSVNJQScgfSxcbiAgICB7IHZhbHVlOiAyMjAsIGNhcHRpb246ICdUVVJLRVknIH0sXG4gICAgeyB2YWx1ZTogMjIxLCBjYXB0aW9uOiAnVFVSS01FTklTVEFOJyB9LFxuICAgIHsgdmFsdWU6IDIyMiwgY2FwdGlvbjogJ1RVUktTIEFORCBDQUlDT1MgSVNMQU5EUycgfSxcbiAgICB7IHZhbHVlOiAyMjMsIGNhcHRpb246ICdUVVZBTFUnIH0sXG4gICAgeyB2YWx1ZTogMjI0LCBjYXB0aW9uOiAnVS5TLiBNSU5PUiBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDIyNSwgY2FwdGlvbjogJ1VHQU5EQScgfSxcbiAgICB7IHZhbHVlOiAyMjYsIGNhcHRpb246ICdVS1JBSU5FJyB9LFxuICAgIHsgdmFsdWU6IDIyNywgY2FwdGlvbjogJ1VOSVRFRCBBUkFCIEVNSVJBVEVTJyB9LFxuICAgIHsgdmFsdWU6IDIyOCwgY2FwdGlvbjogJ1VOSVRFRCBLSU5HRE9NJyB9LFxuICAgIHsgdmFsdWU6IDIyOSwgY2FwdGlvbjogJ1VOSVRFRCBTVEFURVMnIH0sXG4gICAgeyB2YWx1ZTogMjMwLCBjYXB0aW9uOiAnVVJVR1VBWScgfSxcbiAgICB7IHZhbHVlOiAyMzEsIGNhcHRpb246ICdVWkJFS0lTVEFOJyB9LFxuICAgIHsgdmFsdWU6IDIzMiwgY2FwdGlvbjogJ1ZBTlVBVFUnIH0sXG4gICAgeyB2YWx1ZTogMjMzLCBjYXB0aW9uOiAnVkVORVpVRUxBJyB9LFxuICAgIHsgdmFsdWU6IDIzNCwgY2FwdGlvbjogJ1ZJRVROQU0nIH0sXG4gICAgeyB2YWx1ZTogMjM1LCBjYXB0aW9uOiAnVklSR0lOIElTTEFORFMgKEJSSVRJU0gpJyB9LFxuICAgIHsgdmFsdWU6IDIzNiwgY2FwdGlvbjogJ1ZJUkdJTiBJU0xBTkRTIChVLlMuKScgfSxcbiAgICB7IHZhbHVlOiAyMzcsIGNhcHRpb246ICdXQUxMSVMgQU5EIEZVVFVOQSBJU0xBTkRTJyB9LFxuICAgIHsgdmFsdWU6IDIzOCwgY2FwdGlvbjogJ1dFU1RFUk4gU0FIQVJBJyB9LFxuICAgIHsgdmFsdWU6IDIzOSwgY2FwdGlvbjogJ1lFTUVOJyB9LFxuICAgIHsgdmFsdWU6IDI0MCwgY2FwdGlvbjogJ1pBTUJJQScgfSxcbiAgICB7IHZhbHVlOiAyNDEsIGNhcHRpb246ICdaSU1CQUJXRScgfSxcbiAgXTtcbiAgcmV0dXJuIGNyZWF0ZURyb3Bkb3duSW5wdXQoY29uZmlnKTtcbn1cbiIsImltcG9ydCB7IHRyaW1TcGFjZXMsIGNyZWF0ZUVycm9yTWVzc2FnZSwgcmVtb3ZlRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5jb25zdCB0ZXh0SW5wdXRUeXBlcyA9IHtcbiAgVGV4dEFyZWE6IHtcbiAgICB0eXBlOiAndGV4dCcsXG4gICAgcmVnZXg6IC9cXHd7Mix9LyxcbiAgICBlcnJvcjogJ1RoaXMgZmllbGQgbXVzdCBiZSBmaWxsZWQnLFxuICB9LFxuICBUZXh0Qm94OiB7XG4gICAgdHlwZTogJ3RleHQnLFxuICAgIHJlZ2V4OiAvXFx3ezIsfS8sXG4gICAgZXJyb3I6ICdUaGlzIGZpZWxkIG11c3QgYmUgZmlsbGVkJyxcbiAgfSxcbiAgRW1haWxCb3g6IHtcbiAgICB0eXBlOiAnZW1haWwnLFxuICAgIC8vIFNpbXBsZSBhbmQgcXVpdGUgYnJvYWQgZm9yIGJhc2ljIHZhbGlkYXRpb24uXG4gICAgcmVnZXg6IC9eKC4rKUAoLispezIsfVxcLiguKyl7Mix9JC8sXG4gICAgZXJyb3I6ICdQbGVhc2UgaW5zZXJ0IGEgdmFsaWQgZW1haWwgYWRkcmVzcycsXG4gIH0sXG4gIE51bWJlckJveDoge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIHJlZ2V4OiAvXlswLTldKyQvLFxuICAgIGVycm9yOiAnUGxlYXNlIGluc2VydCBhIHZhbGlkIG51bWJlcicsXG4gIH0sXG4gIFRlbGVwaG9uZUJveDoge1xuICAgIHR5cGU6ICd0ZWwnLFxuICAgIC8vIG1hdGNoZXMgKCsyMykgMjM0MyAtIDIzNDJcbiAgICByZWdleDogL15bXFwrMC05XFwtXFwoXFwpXFxzXXs2LH0kLyxcbiAgICBlcnJvcjogJ1BsZWFzZSBpbnNlcnQgYSB2YWxpZCB0ZWxlcGhvbmUgbnVtYmVyJyxcbiAgfSxcbn07XG5cbi8vIFJldHVybnMgdHJ1ZSBpZiB2YWxpZCBhbmQgZmFsc2UgaWYgbm90LlxuLy8gSFRNTCAtPiBCb29sZWFuXG5mdW5jdGlvbiB2YWxpZGF0ZShmaWVsZCwgcmVxdWlyZWQsIHR5cGUpIHtcbiAgLy8gUmVtb3ZlIGVycm9yc1xuICByZW1vdmVFcnJvck1lc3NhZ2UoZmllbGQucGFyZW50RWxlbWVudCk7XG4gIGNvbnN0IHJlZ2V4ID0gdGV4dElucHV0VHlwZXNbdHlwZV0ucmVnZXg7XG4gIGNvbnN0IGNvbnRlbnQgPSB0cmltU3BhY2VzKGZpZWxkLnZhbHVlKTtcblxuICBpZiAoIXJlcXVpcmVkIHx8ICFyZWdleCB8fCByZWdleC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZmllbGQucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChjcmVhdGVFcnJvck1lc3NhZ2UodGV4dElucHV0VHlwZXNbdHlwZV0uZXJyb3IpKTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVRleHRJbnB1dChjb25maWcpIHtcbiAgY29uc3QgdGFnTmFtZSA9IGNvbmZpZy50eXBlID09PSAnVGV4dEFyZWEnID8gJ3RleHRhcmVhJyA6ICdpbnB1dCc7XG4gIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbiAgZWwuY2xhc3NOYW1lID0gdGFnTmFtZSA9PT0gJ3RleHRhcmVhJ1xuICAgID8gJ2ZsLWlmX1RleHRJbnB1dC1pbnB1dCBmbC1pZl9UZXh0QXJlYUlucHV0LWlucHV0J1xuICAgIDogJ2ZsLWlmX1RleHRJbnB1dC1pbnB1dCc7XG4gIGVsLnNldEF0dHJpYnV0ZSgnbmFtZScsIGNvbmZpZy50aXRsZSk7XG4gIGVsLnNldEF0dHJpYnV0ZSgndHlwZScsIHRleHRJbnB1dFR5cGVzW2NvbmZpZy50eXBlXS50eXBlKTtcbiAgZWwucGxhY2Vob2xkZXIgPSBjb25maWcucGxhY2Vob2xkZXI7XG4gIGlmIChjb25maWcucmVxdWlyZWQpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgdHJ1ZSk7XG4gIH1cblxuICBlbC5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgIHJldHVybiBlbC52YWx1ZTtcbiAgfTtcblxuICBlbC52YWxpZGF0ZSA9ICgpID0+IHZhbGlkYXRlKGVsLCBjb25maWcucmVxdWlyZWQsIGNvbmZpZy50eXBlKTtcblxuICBlbC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgZWwudmFsaWRhdGUpO1xuXG4gIHJldHVybiBlbDtcbn1cbiIsImltcG9ydCB7IGFwcGx5RGF0YU1hc2ssIHRyaW1TcGFjZXMsIGNyZWF0ZUVycm9yTWVzc2FnZSwgcmVtb3ZlRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZShmaWVsZCwgcmVxdWlyZWQpIHtcbiAgY29uc3QgZGF0ZU51bWJlcnMgPSB0cmltU3BhY2VzKGZpZWxkLnZhbHVlKS5tYXRjaCgvWzAtOV0vZykgfHwgW107XG4gIGNvbnN0IGNvbnRhaW5lciA9IGZpZWxkLnBhcmVudEVsZW1lbnQ7XG4gIHJlbW92ZUVycm9yTWVzc2FnZShjb250YWluZXIpO1xuXG4gIGlmIChyZXF1aXJlZCAmJiBkYXRlTnVtYmVycy5sZW5ndGggIT09IDgpIHtcbiAgICBjcmVhdGVFcnJvck1lc3NhZ2UoY29udGFpbmVyKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRGF0ZUlucHV0KGNvbmZpZykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIGNvbnN0IGRhdGVGaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGRhdGVGaWVsZC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBkYXRlRmllbGQuY2xhc3NOYW1lID0gJ2ZsLWlmX1RleHRJbnB1dC1pbnB1dCc7XG4gIGRhdGVGaWVsZC52YWx1ZSA9ICdERC9NTS9ZWVlZJztcbiAgaWYgKGNvbmZpZy5yZXF1aXJlZCkge1xuICAgIGRhdGVGaWVsZC5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgdHJ1ZSk7XG4gIH1cbiAgYXBwbHlEYXRhTWFzayhkYXRlRmllbGQsICcgIC8gIC8gICAgJyk7XG5cbiAgZGF0ZUZpZWxkLmdldFZhbHVlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZGF0ZUZpZWxkLnZhbHVlOyB9O1xuXG4gIGRhdGVGaWVsZC52YWxpZGF0ZSA9ICgpID0+IHZhbGlkYXRlKGRhdGVGaWVsZCwgY29uZmlnLnJlcXVpcmVkKTtcblxuICByZXR1cm4gZGF0ZUZpZWxkO1xufVxuIiwiaW1wb3J0IHsgY3JlYXRlT3B0aW9uc0lucHV0LCBjcmVhdGVEcm9wZG93bklucHV0LCBjcmVhdGVDb3VudHJ5RHJvcGRvd25JbnB1dCB9IGZyb20gJy4vaW5wdXQtdHlwZXMvb3B0aW9ucy1pbnB1dCc7XG5pbXBvcnQgY3JlYXRlVGV4dElucHV0IGZyb20gJy4vaW5wdXQtdHlwZXMvdGV4dC1pbnB1dCc7XG5pbXBvcnQgY3JlYXRlRGF0ZUlucHV0IGZyb20gJy4vaW5wdXQtdHlwZXMvZGF0ZS1pbnB1dCc7XG5cbi8vID09PT09PT09PT09PT09PT09IEZJRUxEIEZBQ1RPUlkgPT09PT09PT09PT09PT09PT09PS8vXG4vL1xuLy8gIEltcGxlbWVudHMgdGhlIGBnZXRWYWx1ZWAgbWV0aG9kIHRvIHJldHVybiB0aGUgaW5wdXQgdmFsdWVcbi8vXG5cbmNvbnN0IGlucHV0Q3JlYXRvcnMgPSB7XG4gIEVtYWlsQm94OiBjcmVhdGVUZXh0SW5wdXQsXG4gIE51bWJlckJveDogY3JlYXRlVGV4dElucHV0LFxuICBUZWxlcGhvbmVCb3g6IGNyZWF0ZVRleHRJbnB1dCxcbiAgVGV4dEJveDogY3JlYXRlVGV4dElucHV0LFxuICBUZXh0QXJlYTogY3JlYXRlVGV4dElucHV0LFxuICBDaGVja2JveGVzOiBjcmVhdGVPcHRpb25zSW5wdXQsXG4gIERyb3Bkb3duOiBjcmVhdGVEcm9wZG93bklucHV0LFxuICBDb3VudHJ5RHJvcGRvd246IGNyZWF0ZUNvdW50cnlEcm9wZG93bklucHV0LFxuICBSYWRpb0J1dHRvbnM6IGNyZWF0ZU9wdGlvbnNJbnB1dCxcbiAgRGF0ZUZpZWxkOiBjcmVhdGVEYXRlSW5wdXQsXG59O1xuXG4vKipcbiAqIEBtZXRob2QgZm9ybUZpZWxkXG4gKiBAcGFyYW0gIHtPYmplY3R9IGNvbmZpZyBRdWVzdGlvbiBjb25maWd1cmF0aW9uIG9iamVjdFxuICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1GaWVsZChjb25maWcpIHtcbiAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwcGVyLmNsYXNzTmFtZSA9ICdmbC1pZl9Gb3JtRmllbGQgZmwtaWZfRm9ybUZpZWxkLS1hY3RpdmUnO1xuXG4gIGNvbnN0IGxlZ2VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgbGVnZW5kLmNsYXNzTmFtZSA9ICdmbC1pZl9Gb3JtRmllbGQtbGVnZW5kJztcbiAgbGVnZW5kLmlubmVySFRNTCA9IGNvbmZpZy50aXRsZTtcblxuICBjb25zdCBlbGVtZW50VHlwZSA9IGlucHV0Q3JlYXRvcnNbY29uZmlnLnR5cGVdIHx8IGlucHV0Q3JlYXRvcnNbY29uZmlnLnByaW1pdGl2ZVR5cGVdO1xuICBjb25zdCBpbnB1dEVsID0gZWxlbWVudFR5cGUoY29uZmlnKTtcblxuICB3cmFwcGVyLmFwcGVuZENoaWxkKGxlZ2VuZCk7XG4gIHdyYXBwZXIuYXBwZW5kQ2hpbGQoaW5wdXRFbCk7XG4gIHdyYXBwZXIuZ2V0VmFsdWUgPSBpbnB1dEVsLmdldFZhbHVlO1xuICB3cmFwcGVyLnZhbGlkYXRlID0gaW5wdXRFbC52YWxpZGF0ZTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4iLCJpbXBvcnQgZm9ybUZpZWxkIGZyb20gJy4vaW5wdXQtY3JlYXRvcic7XG5pbXBvcnQgeyBmYWtlRXZlbnQsIGNsb25lLCBjcmVhdGVFcnJvck1lc3NhZ2UsIHJlbW92ZUVycm9yTWVzc2FnZSB9IGZyb20gJy4vdXRpbHMnO1xuXG4vLyA9PT09PT09PT09PT09PT0gRk9STSBTVFJVQ1RVUkUgPT09PT09PT09PT09PT09PT09PS8vXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVzM0Zvcm0oY29uZmlnKSB7XG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIGZvcm0uY2xhc3NOYW1lID0gJ2ZsLWlmX0Zvcm1VSSBmbC1pZl9Gb3JtVUktZXMzJztcblxuICBjb25zdCBxdWVzdGlvbnMgPSBbXTtcbiAgbGV0IHF1ZXN0aW9uRWw7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY29uZmlnLmxlbmd0aDsgaSsrKSB7XG4gICAgcXVlc3Rpb25FbCA9IGZvcm1GaWVsZChjb25maWdbaV0pO1xuICAgIHF1ZXN0aW9ucy5wdXNoKHF1ZXN0aW9uRWwpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQocXVlc3Rpb25FbCk7XG4gIH1cblxuICBjb25zdCBzdWJtaXRCdG5Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgc3VibWl0QnRuQ29udGFpbmVyLmNsYXNzTmFtZSA9ICdmbC1pZl9Gb3JtRmllbGQgZmwtaWZfRm9ybUZpZWxkLS1hY3RpdmUnO1xuXG4gIGNvbnN0IHN1Ym1pdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBzdWJtaXRCdG4uc2V0QXR0cmlidXRlKCd0eXBlJywgJ3N1Ym1pdCcpO1xuICBzdWJtaXRCdG4uaW5uZXJIVE1MID0gJ1N1Ym1pdCc7XG4gIHN1Ym1pdEJ0bi5jbGFzc05hbWUgPSAnZmwtaWZfTmF2aWdhdGlvbkJhci1idXR0b24nO1xuICBzdWJtaXRCdG5Db250YWluZXIuYXBwZW5kQ2hpbGQoc3VibWl0QnRuKTtcbiAgZm9ybS5hcHBlbmRDaGlsZChzdWJtaXRCdG5Db250YWluZXIpO1xuXG4gIGNvbnN0IGZvcm1XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGZvcm1XcmFwcGVyLmNsYXNzTmFtZSA9ICdmbC1pZic7XG4gIGZvcm1XcmFwcGVyLmFwcGVuZENoaWxkKGZvcm0pO1xuXG4gIGNvbnN0IGxpc3RlbmVycyA9IFtdO1xuICBmb3JtV3JhcHBlci5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gY3VzdG9tQWRkRXZlbnRMaXN0ZW5lcihldmVudCwgY2FsbGJhY2spIHtcbiAgICBpZiAoZXZlbnQgPT09ICdzdWJtaXQnKSB7XG4gICAgICBsaXN0ZW5lcnMucHVzaChjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgZm9ybVdyYXBwZXIudHJpZ2dlclN1Ym1pdCA9IGZ1bmN0aW9uIHRyaWdnZXJTdWJtaXQoZm9ybURhdGEpIHtcbiAgICBjb25zdCBldnQgPSBmYWtlRXZlbnQoZm9ybURhdGEpO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgbGlzdGVuZXJzLmxlbmd0aDsgaisrKSB7XG4gICAgICBsaXN0ZW5lcnNbal0oZXZ0KTtcbiAgICB9XG4gIH07XG5cbiAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiBzdWJtaXRCdG5DbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgcmVtb3ZlRXJyb3JNZXNzYWdlKHN1Ym1pdEJ0bkNvbnRhaW5lcik7XG4gICAgY29uc3Qgbm90VmFsaWRhdGVkRmllbGRzID0gcXVlc3Rpb25zXG4gICAgICAubWFwKGZpZWxkID0+IHtcbiAgICAgICAgaWYgKGZpZWxkLnZhbGlkYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIGZpZWxkLnZhbGlkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9KVxuICAgICAgLmZpbHRlcih2ID0+ICF2KTtcblxuICAgIGlmIChub3RWYWxpZGF0ZWRGaWVsZHMubGVuZ3RoID4gMCkge1xuICAgICAgc3VibWl0QnRuQ29udGFpbmVyLmFwcGVuZENoaWxkKFxuICAgICAgICBjcmVhdGVFcnJvck1lc3NhZ2UoYCR7bm90VmFsaWRhdGVkRmllbGRzLmxlbmd0aH0gZmllbGRzIG5lZWQgdG8gYmUgY29tcGxldGVkLmApXG4gICAgICApO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGZvcm1EYXRhID0gY29uZmlnLm1hcCgoZmllbGQsIGluZGV4KSA9PlxuICAgICAgT2JqZWN0LmFzc2lnbih7fSwgZmllbGQsIHsgYW5zd2VyOiBxdWVzdGlvbnNbaW5kZXhdLmdldFZhbHVlKCkgfSlcbiAgICApO1xuXG4gICAgZm9ybVdyYXBwZXIudHJpZ2dlclN1Ym1pdChmb3JtRGF0YSk7XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG4gIHJldHVybiBmb3JtV3JhcHBlcjtcbn1cbiIsImltcG9ydCAnLi9wb2x5ZmlsbHMnO1xuaW1wb3J0IGVzM0Zvcm0gZnJvbSAnLi9mb3JtLWNyZWF0b3InO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi91dGlscyc7XG5cbi8vID09PT09PT09PT09PT09PSBHTE9CQUwgT0JKRUNUID09PT09PT09PT09PT09PT09PT0vL1xuXG4vLyBTVEFSVCBIRVJFXG5jb25zdCBmbEludGVyYWN0aXZlRm9ybSA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoY29uZmlnKSB7XG4gICAgYXNzZXJ0KGNvbmZpZyAmJiBjb25maWcubGVuZ3RoICE9PSB1bmRlZmluZWQsXG4gICAgICAnVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBjb25maWd1cmF0aW9uIGFycmF5Jyk7XG5cbiAgICBjb25zdCBmb3JtID0gZXMzRm9ybShjb25maWcpO1xuICAgIHJldHVybiBmb3JtO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZmxJbnRlcmFjdGl2ZUZvcm07XG4iXSwibmFtZXMiOlsiRWxlbWVudCIsInByb3RvdHlwZSIsInJlbW92ZSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImFzc2VydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciIsImZha2VFdmVudCIsImFuc3dlcnMiLCJhcHBseURhdGFNYXNrIiwiZmllbGQiLCJmaWVsZE1hc2siLCJtYXNrIiwic3BsaXQiLCJzdHJpcE1hc2siLCJtYXNrZWREYXRhIiwiaXNEaWdpdCIsImNoYXIiLCJ0ZXN0IiwiZmlsdGVyIiwiYXBwbHlNYXNrIiwiZGF0YSIsIm1hcCIsImxlbmd0aCIsInNoaWZ0Iiwiam9pbiIsInJlYXBwbHlNYXNrIiwiY2hhbmdlZCIsIm9sZFN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJvbGRFbmQiLCJzZWxlY3Rpb25FbmQiLCJ2YWx1ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjcmVhdGVFcnJvck1lc3NhZ2UiLCJlcnIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJpbm5lckhUTUwiLCJyZW1vdmVFcnJvck1lc3NhZ2UiLCJlcnJvck1lc3NhZ2VzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlciIsInRyaW1TcGFjZXMiLCJzdHIiLCJyZXBsYWNlIiwidmFsaWRhdGVEcm9wZG93biIsInJlcXVpcmVkIiwiY29udGFpbmVyIiwicGFyZW50RWxlbWVudCIsImFwcGVuZENoaWxkIiwidmFsaWRhdGVPcHRpb25zIiwib25lQ2hlY2tlZCIsInIiLCJjaGVja2VkIiwicmVkdWNlIiwib3V0IiwiY3JlYXRlT3B0aW9uc0lucHV0IiwiY29uZmlnIiwid3JhcHBlciIsIm9wdGlvbnMiLCJvcHRpb25UeXBlIiwidHlwZSIsIm9wdGlvbk5hbWUiLCJ0aXRsZSIsImkiLCJvcHRpb25JRCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicmFuZG9tIiwib3B0aW9uV3JhcHBlciIsIm9wdGlvbkVsIiwiaWQiLCJzZXRBdHRyaWJ1dGUiLCJjYXB0aW9uIiwibGFiZWwiLCJvcHRpb25MZWdlbmQiLCJjcmVhdGVUZXh0Tm9kZSIsInB1c2giLCJnZXRWYWx1ZSIsImoiLCJ2YWxpZGF0ZSIsImNyZWF0ZURyb3Bkb3duSW5wdXQiLCJzZWxlY3QiLCJkaXNhYmxlZEluZGV4ZXMiLCJvcHRpb25JbmRleCIsIm9wdGlvblZhbHVlIiwiY3JlYXRlQ291bnRyeURyb3Bkb3duSW5wdXQiLCJ0ZXh0SW5wdXRUeXBlcyIsInJlZ2V4IiwiY29udGVudCIsImVycm9yIiwiY3JlYXRlVGV4dElucHV0IiwidGFnTmFtZSIsImVsIiwicGxhY2Vob2xkZXIiLCJkYXRlTnVtYmVycyIsIm1hdGNoIiwiY3JlYXRlRGF0ZUlucHV0IiwiZGF0ZUZpZWxkIiwiaW5wdXRDcmVhdG9ycyIsImZvcm1GaWVsZCIsImxlZ2VuZCIsImVsZW1lbnRUeXBlIiwicHJpbWl0aXZlVHlwZSIsImlucHV0RWwiLCJlczNGb3JtIiwiZm9ybSIsInF1ZXN0aW9ucyIsInF1ZXN0aW9uRWwiLCJzdWJtaXRCdG5Db250YWluZXIiLCJzdWJtaXRCdG4iLCJmb3JtV3JhcHBlciIsImxpc3RlbmVycyIsImN1c3RvbUFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNhbGxiYWNrIiwidHJpZ2dlclN1Ym1pdCIsImZvcm1EYXRhIiwiZXZ0Iiwic3VibWl0QnRuQ2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJub3RWYWxpZGF0ZWRGaWVsZHMiLCJ2IiwiaW5kZXgiLCJPYmplY3QiLCJhc3NpZ24iLCJhbnN3ZXIiLCJmbEludGVyYWN0aXZlRm9ybSIsImNyZWF0ZSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSSxFQUFFLFlBQVlBLFFBQVFDLFNBQXRCLENBQUosRUFBc0M7WUFDMUJBLFNBQVIsQ0FBa0JDLE1BQWxCLEdBQTJCLFlBQVc7WUFDOUIsS0FBS0MsVUFBVCxFQUFxQjtpQkFDWkEsVUFBTCxDQUFnQkMsV0FBaEIsQ0FBNEIsSUFBNUI7O0tBRlI7OztBQ0RHLFNBQVNDLE1BQVQsQ0FBZ0JDLFNBQWhCLEVBQTJCQyxPQUEzQixFQUFvQztNQUNyQyxDQUFDRCxTQUFMLEVBQWdCO1VBQ1IsSUFBSUUsS0FBSixDQUFVRCxPQUFWLENBQU47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"}